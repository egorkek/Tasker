{"ast":null,"code":"import _regeneratorRuntime from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nexport function auth(email, password, isLogin) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var authData, dbName, dataForBD, response, idToken;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                authData = {\n                  email: email,\n                  password: password,\n                  returnSecureToken: true\n                };\n                dbName = authData.email.replace('@', '').replace('.', '');\n\n                if (isLogin) {\n                  _context.next = 8;\n                  break;\n                }\n\n                console.log(authData);\n                dataForBD = {\n                  email: email\n                };\n                _context.next = 7;\n                return axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyDJHO8YGwRavnNLmCryDKXOic-ChroRlFo', authData);\n\n              case 7:\n                axios.put(\"https://taskscheduler-be7db.firebaseio.com/users/<\".concat(dbName, \">.json\"), dataForBD);\n\n              case 8:\n                if (!isLogin) {\n                  _context.next = 16;\n                  break;\n                }\n\n                _context.next = 11;\n                return axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyDJHO8YGwRavnNLmCryDKXOic-ChroRlFo', authData);\n\n              case 11:\n                response = _context.sent;\n                idToken = response.data.idToken; // const info = await axios.get(`https://taskscheduler-be7db.firebaseio.com/users/<${response.data.email.replace('@', '').replace('.', '')}>.json`);\n\n                dispatch(login(authData.email, idToken, dbName));\n                console.log(getState().auth.keyForBD);\n                getTasks();\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}\n\nfunction login(info, idToken, keyForBD) {\n  return {\n    type: 'LOG_IN',\n    email: info,\n    idToken: idToken,\n    keyForBD: keyForBD\n  };\n}\n\nexport function getTasks() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                dispatch(fetchTasksStart());\n                _context2.prev = 1;\n                _context2.next = 4;\n                return axios.get(\"https://taskscheduler-be7db.firebaseio.com/users/<\".concat(getState().auth.keyForBD, \">/listOfTasks.json\"));\n\n              case 4:\n                response = _context2.sent;\n                console.log(\"https://taskscheduler-be7db.firebaseio.com/users/<\".concat(getState().auth.keyForBD, \">/listOfTasks.json\"));\n                dispatch(fetchTasksSuccess(response.data));\n                _context2.next = 13;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.log(_context2.t0);\n                dispatch(fetcTasksError(_context2.t0));\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 9]]);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n}\n\nfunction fetchTasksSuccess(tasks) {\n  return {\n    type: 'FETCH_TASKS_SUCCESS',\n    tasks: tasks\n  };\n}\n\nfunction fetchTasksStart() {\n  return {\n    type: 'FETCH_TASKS_START'\n  };\n}\n\nexport function fetcTasksError(e) {\n  return {\n    type: 'FETCH_TASKS_ERROR',\n    error: e\n  };\n}\n;","map":{"version":3,"sources":["/Users/egor/Documents/qqq/Tasker/src/store/actions/auth.js"],"names":["axios","auth","email","password","isLogin","dispatch","getState","authData","returnSecureToken","dbName","replace","console","log","dataForBD","post","put","response","idToken","data","login","keyForBD","getTasks","info","type","fetchTasksStart","get","fetchTasksSuccess","fetcTasksError","tasks","e","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqBC,QAArB,EAA+BC,OAA/B,EAAwC;AAC3C;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACGC,gBAAAA,QADH,GACc;AACbL,kBAAAA,KAAK,EAALA,KADa;AACPC,kBAAAA,QAAQ,EAARA,QADO;AACGK,kBAAAA,iBAAiB,EAAE;AADtB,iBADd;AAIGC,gBAAAA,MAJH,GAIYF,QAAQ,CAACL,KAAT,CAAeQ,OAAf,CAAuB,GAAvB,EAA4B,EAA5B,EAAgCA,OAAhC,CAAwC,GAAxC,EAA6C,EAA7C,CAJZ;;AAAA,oBAKEN,OALF;AAAA;AAAA;AAAA;;AAMCO,gBAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACMM,gBAAAA,SAPP,GAOmB;AACdX,kBAAAA,KAAK,EAALA;AADc,iBAPnB;AAAA;AAAA,uBAaOF,KAAK,CAACc,IAAN,CAAW,sHAAX,EAAmIP,QAAnI,CAbP;;AAAA;AAcCP,gBAAAA,KAAK,CAACe,GAAN,6DAA+DN,MAA/D,aAA+EI,SAA/E;;AAdD;AAAA,qBAiBAT,OAjBA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAkBoBJ,KAAK,CAACc,IAAN,CAAW,uHAAX,EAAoIP,QAApI,CAlBpB;;AAAA;AAkBGS,gBAAAA,QAlBH;AAmBGC,gBAAAA,OAnBH,GAmBaD,QAAQ,CAACE,IAAT,CAAcD,OAnB3B,EAqBH;;AACAZ,gBAAAA,QAAQ,CAACc,KAAK,CAACZ,QAAQ,CAACL,KAAV,EAAiBe,OAAjB,EAA0BR,MAA1B,CAAN,CAAR;AACIE,gBAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,GAAGL,IAAX,CAAgBmB,QAA5B;AACAC,gBAAAA,QAAQ;;AAxBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAiCH;;AACD,SAASF,KAAT,CAAeG,IAAf,EAAqBL,OAArB,EAA8BG,QAA9B,EAAwC;AACpC,SAAM;AACFG,IAAAA,IAAI,EAAE,QADJ;AAEFrB,IAAAA,KAAK,EAAEoB,IAFL;AAGFL,IAAAA,OAAO,EAAPA,OAHE;AAIFG,IAAAA,QAAQ,EAARA;AAJE,GAAN;AAOH;;AACD,OAAO,SAASC,QAAT,GAAoB;AACvB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,kBAAOhB,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEHD,gBAAAA,QAAQ,CAACmB,eAAe,EAAhB,CAAR;AAFG;AAAA;AAAA,uBAKwBxB,KAAK,CAACyB,GAAN,6DAA+DnB,QAAQ,GAAGL,IAAX,CAAgBmB,QAA/E,wBALxB;;AAAA;AAKOJ,gBAAAA,QALP;AAMCL,gBAAAA,OAAO,CAACC,GAAR,6DAAiEN,QAAQ,GAAGL,IAAX,CAAgBmB,QAAjF;AACAf,gBAAAA,QAAQ,CAACqB,iBAAiB,CAACV,QAAQ,CAACE,IAAV,CAAlB,CAAR;AAPD;AAAA;;AAAA;AAAA;AAAA;AAYCP,gBAAAA,OAAO,CAACC,GAAR;AACAP,gBAAAA,QAAQ,CAACsB,cAAc,cAAf,CAAR;;AAbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBH;;AACD,SAASD,iBAAT,CAA2BE,KAA3B,EAAkC;AAC9B,SAAM;AACFL,IAAAA,IAAI,EAAE,qBADJ;AAEFK,IAAAA,KAAK,EAALA;AAFE,GAAN;AAKH;;AAED,SAASJ,eAAT,GAA0B;AACtB,SAAM;AACFD,IAAAA,IAAI,EAAC;AADH,GAAN;AAGH;;AAED,OAAO,SAASI,cAAT,CAAwBE,CAAxB,EAA2B;AAC9B,SAAM;AACFN,IAAAA,IAAI,EAAE,mBADJ;AAEFO,IAAAA,KAAK,EAAED;AAFL,GAAN;AAMH;AAAA","sourcesContent":["import axios from 'axios'\n\nexport function auth(email, password, isLogin) {\n    return async (dispatch, getState) =>{\n        const authData = {\n            email,password, returnSecureToken: true\n        };\n        const dbName = authData.email.replace('@', '').replace('.', '');\n        if (!isLogin) {\n            console.log(authData);\n            const dataForBD = {\n                email\n\n\n            };\n\n            await axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyDJHO8YGwRavnNLmCryDKXOic-ChroRlFo', authData);\n            axios.put(`https://taskscheduler-be7db.firebaseio.com/users/<${dbName}>.json`, dataForBD );\n\n        }\n        if(isLogin){\n        const response = await axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyDJHO8YGwRavnNLmCryDKXOic-ChroRlFo', authData);\n        const idToken = response.data.idToken;\n\n        // const info = await axios.get(`https://taskscheduler-be7db.firebaseio.com/users/<${response.data.email.replace('@', '').replace('.', '')}>.json`);\n        dispatch(login(authData.email, idToken, dbName));\n            console.log(getState().auth.keyForBD)\n            getTasks()\n\n\n\n\n        }\n\n    }\n\n}\nfunction login(info, idToken, keyForBD) {\n    return{\n        type: 'LOG_IN',\n        email: info,\n        idToken,\n        keyForBD\n    }\n\n}\nexport function getTasks() {\n    return async (dispatch, getState)=>{\n\n        dispatch(fetchTasksStart());\n\n        try {\n            const response = await axios.get(`https://taskscheduler-be7db.firebaseio.com/users/<${getState().auth.keyForBD}>/listOfTasks.json`)\n            console.log(`https://taskscheduler-be7db.firebaseio.com/users/<${getState().auth.keyForBD}>/listOfTasks.json`)\n            dispatch(fetchTasksSuccess(response.data));\n\n\n        }\n        catch (e) {\n            console.log(e)\n            dispatch(fetcTasksError(e))\n\n\n        }\n\n\n\n    }\n\n}\nfunction fetchTasksSuccess(tasks) {\n    return{\n        type: 'FETCH_TASKS_SUCCESS',\n        tasks\n    }\n\n}\n\nfunction fetchTasksStart(){\n    return{\n        type:'FETCH_TASKS_START'\n    }\n}\n\nexport function fetcTasksError(e) {\n    return{\n        type: 'FETCH_TASKS_ERROR',\n        error: e\n    }\n\n\n};\n\n"]},"metadata":{},"sourceType":"module"}