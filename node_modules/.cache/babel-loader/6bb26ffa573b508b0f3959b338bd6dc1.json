{"ast":null,"code":"import _regeneratorRuntime from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nexport function getTasks() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch(fetchTasksStart());\n\n                try {} catch (e) {}\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}\n\nfunction fetchTasksStart() {\n  return {\n    type: 'FETCH_TASKS_START'\n  };\n}","map":{"version":3,"sources":["/Users/egor/Documents/qqq/Tasker/src/store/actions/getTasks.js"],"names":["axios","getTasks","dispatch","getState","fetchTasksStart","e","type"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,QAAT,GAAoB;AACvB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AACHD,gBAAAA,QAAQ,CAACE,eAAe,EAAhB,CAAR;;AACA,oBAAI,CAEH,CAFD,CAGA,OAAOC,CAAP,EAAU,CAGT;;AARE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAaH;;AAED,SAASD,eAAT,GAA0B;AACtB,SAAM;AACFE,IAAAA,IAAI,EAAC;AADH,GAAN;AAGH","sourcesContent":["import axios from 'axios'\n\nexport function getTasks() {\n    return async (dispatch, getState)=>{\n        dispatch(fetchTasksStart())\n        try {\n\n        }\n        catch (e) {\n\n\n        }\n\n\n    }\n\n}\n\nfunction fetchTasksStart(){\n    return{\n        type:'FETCH_TASKS_START'\n    }\n}\n"]},"metadata":{},"sourceType":"module"}