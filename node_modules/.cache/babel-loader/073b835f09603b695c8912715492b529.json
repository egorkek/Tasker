{"ast":null,"code":"import _objectSpread from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  loading: true,\n  tasks: []\n};\nexport default function tasks() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    default:\n      return state;\n\n    case 'ADD_TASK':\n      return {\n        state: state\n      };\n\n    case 'FETCH_TASKS_START':\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case 'FETCH_TASKS_SUCCESS':\n      return {\n        tasks: state.tasks,\n        loading: false\n      };\n\n    case 'FETCH_TASKS_ERROR':\n      return _objectSpread({}, state, {\n        loading: false\n      });\n  }\n}","map":{"version":3,"sources":["/Users/egor/Documents/qqq/Tasker/src/store/reducers/tasks.js"],"names":["initialState","loading","tasks","state","action","type"],"mappings":";AAAA,IAAMA,YAAY,GAAC;AACfC,EAAAA,OAAO,EAAE,IADM;AAEfC,EAAAA,KAAK,EAAE;AAFQ,CAAnB;AAKA,eAAe,SAASA,KAAT,GAA2C;AAAA,MAA5BC,KAA4B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI;AACI,aAAOF,KAAP;;AAEJ,SAAK,UAAL;AACI,aAAM;AACFA,QAAAA,KAAK,EAALA;AADE,OAAN;;AAGJ,SAAK,mBAAL;AACI,+BACOA,KADP;AACcF,QAAAA,OAAO,EAAE;AADvB;;AAGJ,SAAK,qBAAL;AACI,aAAM;AACFC,QAAAA,KAAK,EAAEC,KAAK,CAACD,KADX;AAEFD,QAAAA,OAAO,EAAE;AAFP,OAAN;;AAKJ,SAAK,mBAAL;AACQ,+BACOE,KADP;AAEIF,QAAAA,OAAO,EAAE;AAFb;AAnBZ;AA2BH","sourcesContent":["const initialState={\n    loading: true,\n    tasks: []\n\n};\nexport default function tasks(state=initialState, action) {\n    switch (action.type) {\n        default:\n            return state;\n\n        case 'ADD_TASK':\n            return{\n                state\n            };\n        case 'FETCH_TASKS_START':\n            return{\n                ...state, loading: true\n            }\n        case 'FETCH_TASKS_SUCCESS':\n            return{\n                tasks: state.tasks,\n                loading: false\n\n            }\n        case 'FETCH_TASKS_ERROR':\n                return{\n                    ...state,\n                    loading: false\n                }\n\n\n    }\n\n}"]},"metadata":{},"sourceType":"module"}