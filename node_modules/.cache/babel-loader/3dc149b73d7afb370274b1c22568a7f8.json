{"ast":null,"code":"import _regeneratorRuntime from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nexport function auth(email, password, isLogin) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var authData, dbName, dataForBD, response, idToken, info, tasksList;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                authData = {\n                  email: email,\n                  password: password,\n                  returnSecureToken: true\n                };\n                dbName = authData.email.replace('@', '').replace('.', '');\n\n                if (isLogin) {\n                  _context.next = 8;\n                  break;\n                }\n\n                console.log(authData);\n                dataForBD = {\n                  email: email\n                };\n                _context.next = 7;\n                return axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyDJHO8YGwRavnNLmCryDKXOic-ChroRlFo', authData);\n\n              case 7:\n                axios.put(\"https://taskscheduler-be7db.firebaseio.com/users/<\".concat(dbName, \">.json\"), dataForBD);\n\n              case 8:\n                if (!isLogin) {\n                  _context.next = 22;\n                  break;\n                }\n\n                _context.next = 11;\n                return axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyDJHO8YGwRavnNLmCryDKXOic-ChroRlFo', authData);\n\n              case 11:\n                response = _context.sent;\n                console.log(response.data);\n                idToken = response.data.idToken;\n                _context.next = 16;\n                return axios.get(\"https://taskscheduler-be7db.firebaseio.com/users/<\".concat(response.data.email.replace('@', '').replace('.', ''), \">.json\"));\n\n              case 16:\n                info = _context.sent;\n                dispatch(login(info, idToken, response.data.email.replace('@', '').replace('.', '')));\n                _context.next = 20;\n                return axios.get(\"https://taskscheduler-be7db.firebaseio.com/users/<\".concat(dbName, \">/listOfTasks.json\"));\n\n              case 20:\n                tasksList = _context.sent;\n                dispatch(AddingTasksFromBd(tasksList.data));\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}\n\nfunction login(info, idToken, keyForBD) {\n  return {\n    type: 'LOG_IN',\n    email: info.data.email,\n    idToken: idToken,\n    keyForBD: keyForBD\n  };\n}\n\nfunction AddingTasksFromBd(tasks) {\n  return {\n    type: 'ADDING_TASKS_FROM_BD',\n    tasks: tasks\n  };\n}","map":{"version":3,"sources":["/Users/egor/Documents/qqq/Tasker/src/store/actions/auth.js"],"names":["axios","auth","email","password","isLogin","dispatch","getState","authData","returnSecureToken","dbName","replace","console","log","dataForBD","post","put","response","data","idToken","get","info","login","tasksList","AddingTasksFromBd","keyForBD","type","tasks"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqBC,QAArB,EAA+BC,OAA/B,EAAwC;AAC3C;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACGC,gBAAAA,QADH,GACc;AACbL,kBAAAA,KAAK,EAALA,KADa;AACPC,kBAAAA,QAAQ,EAARA,QADO;AACGK,kBAAAA,iBAAiB,EAAE;AADtB,iBADd;AAIGC,gBAAAA,MAJH,GAIYF,QAAQ,CAACL,KAAT,CAAeQ,OAAf,CAAuB,GAAvB,EAA4B,EAA5B,EAAgCA,OAAhC,CAAwC,GAAxC,EAA6C,EAA7C,CAJZ;;AAAA,oBAKEN,OALF;AAAA;AAAA;AAAA;;AAMCO,gBAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACMM,gBAAAA,SAPP,GAOmB;AACdX,kBAAAA,KAAK,EAALA;AADc,iBAPnB;AAAA;AAAA,uBAWOF,KAAK,CAACc,IAAN,CAAW,sHAAX,EAAmIP,QAAnI,CAXP;;AAAA;AAYCP,gBAAAA,KAAK,CAACe,GAAN,6DAA+DN,MAA/D,aAA+EI,SAA/E;;AAZD;AAAA,qBAeAT,OAfA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAgBoBJ,KAAK,CAACc,IAAN,CAAW,uHAAX,EAAoIP,QAApI,CAhBpB;;AAAA;AAgBGS,gBAAAA,QAhBH;AAiBHL,gBAAAA,OAAO,CAACC,GAAR,CAAYI,QAAQ,CAACC,IAArB;AACMC,gBAAAA,OAlBH,GAkBaF,QAAQ,CAACC,IAAT,CAAcC,OAlB3B;AAAA;AAAA,uBAoBgBlB,KAAK,CAACmB,GAAN,6DAA+DH,QAAQ,CAACC,IAAT,CAAcf,KAAd,CAAoBQ,OAApB,CAA4B,GAA5B,EAAiC,EAAjC,EAAqCA,OAArC,CAA6C,GAA7C,EAAkD,EAAlD,CAA/D,YApBhB;;AAAA;AAoBGU,gBAAAA,IApBH;AAqBHf,gBAAAA,QAAQ,CAACgB,KAAK,CAACD,IAAD,EAAOF,OAAP,EAAgBF,QAAQ,CAACC,IAAT,CAAcf,KAAd,CAAoBQ,OAApB,CAA4B,GAA5B,EAAiC,EAAjC,EAAqCA,OAArC,CAA6C,GAA7C,EAAkD,EAAlD,CAAhB,CAAN,CAAR;AArBG;AAAA,uBAsBsBV,KAAK,CAACmB,GAAN,6DAA+DV,MAA/D,wBAtBtB;;AAAA;AAsBGa,gBAAAA,SAtBH;AAuBCjB,gBAAAA,QAAQ,CAACkB,iBAAiB,CAACD,SAAS,CAACL,IAAX,CAAlB,CAAR;;AAvBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AA8BH;;AACD,SAASI,KAAT,CAAeD,IAAf,EAAqBF,OAArB,EAA8BM,QAA9B,EAAwC;AACpC,SAAM;AACFC,IAAAA,IAAI,EAAE,QADJ;AAEFvB,IAAAA,KAAK,EAAEkB,IAAI,CAACH,IAAL,CAAUf,KAFf;AAGFgB,IAAAA,OAAO,EAAPA,OAHE;AAIFM,IAAAA,QAAQ,EAARA;AAJE,GAAN;AAOH;;AAED,SAASD,iBAAT,CAA4BG,KAA5B,EAAkC;AAC9B,SAAM;AACFD,IAAAA,IAAI,EAAC,sBADH;AAEFC,IAAAA,KAAK,EAALA;AAFE,GAAN;AAKH","sourcesContent":["import axios from 'axios'\n\nexport function auth(email, password, isLogin) {\n    return async (dispatch, getState) =>{\n        const authData = {\n            email,password, returnSecureToken: true\n        };\n        const dbName = authData.email.replace('@', '').replace('.', '');\n        if (!isLogin) {\n            console.log(authData);\n            const dataForBD = {\n                email\n            };\n\n            await axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyDJHO8YGwRavnNLmCryDKXOic-ChroRlFo', authData);\n            axios.put(`https://taskscheduler-be7db.firebaseio.com/users/<${dbName}>.json`, dataForBD );\n\n        }\n        if(isLogin){\n        const response = await axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyDJHO8YGwRavnNLmCryDKXOic-ChroRlFo', authData);\n        console.log(response.data);\n        const idToken = response.data.idToken;\n\n        const info = await axios.get(`https://taskscheduler-be7db.firebaseio.com/users/<${response.data.email.replace('@', '').replace('.', '')}>.json`);\n        dispatch(login(info, idToken, response.data.email.replace('@', '').replace('.', '')));\n        const tasksList = await  axios.get(`https://taskscheduler-be7db.firebaseio.com/users/<${dbName}>/listOfTasks.json`);\n            dispatch(AddingTasksFromBd(tasksList.data))\n\n\n        }\n\n    }\n\n}\nfunction login(info, idToken, keyForBD) {\n    return{\n        type: 'LOG_IN',\n        email: info.data.email,\n        idToken,\n        keyForBD\n    }\n\n}\n\nfunction AddingTasksFromBd (tasks){\n    return{\n        type:'ADDING_TASKS_FROM_BD',\n        tasks\n    }\n\n}"]},"metadata":{},"sourceType":"module"}