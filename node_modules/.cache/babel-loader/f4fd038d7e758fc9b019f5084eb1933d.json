{"ast":null,"code":"import _regeneratorRuntime from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/egor/Documents/qqq/Tasker/src/containers/Landing/Landing.js\";\nimport React, { Fragment } from 'react';\nimport classes from './Landing.css';\nimport Button from '../../components/UI/Button/Button';\nimport Input from \"../../components/UI/Input/Input\";\nimport is from 'is_js';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { auth as _auth } from \"../../store/actions/auth\";\nimport Header from '../../components/Header/Header';\n\nvar Landing =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Landing, _React$Component);\n\n  function Landing() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Landing);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Landing)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      allValid: false,\n      formControls: {\n        Email: {\n          value: '',\n          isValid: true,\n          isTouched: false,\n          type: 'text',\n          label: 'Email'\n        },\n        password: {\n          value: '',\n          isValid: true,\n          isTouched: false,\n          type: 'password',\n          label: 'password'\n        }\n      }\n    };\n\n    _this.onChangeHandler = function (e, control) {\n      control.isTouched = true;\n      control.value = e.target.value;\n      var formControls = _this.state.formControls;\n\n      if (control.label === 'Email') {\n        if (is.email(control.value)) {\n          control.isValid = true;\n        } else {\n          control.isValid = false;\n        }\n      }\n\n      if (control.label === 'password') {\n        if (control.value.length >= 6) {\n          control.isValid = true;\n        } else {\n          control.isValid = false;\n        }\n      }\n\n      formControls[control.label] = control;\n\n      _this.setState({\n        formControls: formControls\n      });\n\n      var names = Object.keys(_this.state.formControls);\n      var count = 0;\n\n      for (var i = 0; i < names.length; i++) {\n        if (formControls[names[i]].isValid && formControls[names[i]].isTouched) {\n          count++;\n        }\n      }\n\n      if (count === names.length) {\n        _this.setState({\n          allValid: true\n        });\n      }\n    };\n\n    _this.registerButtonClickHandler =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var authData, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              authData = {\n                email: _this.state.formControls.Email.value,\n                password: _this.state.formControls.password.value,\n                returnSecureToken: true\n              };\n              _context.prev = 1;\n              _context.next = 4;\n              return axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyDJHO8YGwRavnNLmCryDKXOic-ChroRlFo', authData);\n\n            case 4:\n              response = _context.sent;\n              console.log(_this.state.formControls.Email); // await axios.post(`https://taskscheduler-be7db.firebaseio.com/users/<${response.data.idToken}>.json`, this.state );\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 11:\n              _this.setState({\n                allValid: false,\n                formControls: {\n                  Email: {\n                    value: '',\n                    isValid: true,\n                    isTouched: false,\n                    type: 'text',\n                    label: 'Email'\n                  },\n                  password: {\n                    value: '',\n                    isValid: true,\n                    isTouched: false,\n                    type: 'password',\n                    label: 'password'\n                  }\n                }\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[1, 8]]);\n    }));\n\n    _this.enterButtonClickHandler = function () {// const authData = {\n      //     email: this.state.formControls.Email.value,\n      //     password: this.state.formControls.password.value,\n      //     returnSecureToken: true\n      // };\n      // try{\n      //     const response = await axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyDJHO8YGwRavnNLmCryDKXOic-ChroRlFo', authData);\n      //     console.log(response.data)\n      // }catch (e) {\n      //     console.log(e)\n      //\n      // }\n      // this.setState({\n      //     allValid: false,\n      //     formControls:{\n      //         Email:{\n      //             value: '',\n      //             isValid: true,\n      //             isTouched: false,\n      //             type: 'text',\n      //             label:'Email'\n      //         },\n      //         password:{\n      //             value: '',\n      //             isValid:true,\n      //             isTouched:false,\n      //             type: 'password',\n      //             label:'password'\n      //         }\n      //     }\n      //\n      // })\n    };\n\n    return _this;\n  }\n\n  _createClass(Landing, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props.state);\n      var email = this.state.formControls.Email;\n      var password = this.state.formControls.password;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.Landing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Doloribus exercitationem itaque laborum qui quis? Architecto aut consectetur consequuntur, dolorum nam pariatur sit tempora? Amet dolorem hic, laudantium repudiandae rerum vel.\", React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Input, {\n        isValid: email.isValid,\n        label: email.label,\n        value: email.value,\n        onChange: function onChange(e) {\n          return _this2.onChangeHandler(e, email);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(Input, {\n        label: password.label,\n        isValid: password.isValid,\n        type: password.type,\n        value: password.value,\n        onChange: function onChange(e) {\n          return _this2.onChangeHandler(e, password);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(Button, {\n        disabled: !this.state.allValid,\n        onClick: function onClick() {\n          return _this2.registerButtonClickHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0435\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"), React.createElement(Button, {\n        type: 'green',\n        disabled: !this.state.allValid,\n        onClick: function onClick() {\n          return _this2.enterButtonClickHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"far fa-calendar-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Landing;\n}(React.Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    auth: function auth(email, password, isLogin) {\n      return dispatch(_auth(email, password, isLogin));\n    }\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    state: state.auth\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Landing);","map":{"version":3,"sources":["/Users/egor/Documents/qqq/Tasker/src/containers/Landing/Landing.js"],"names":["React","Fragment","classes","Button","Input","is","axios","connect","auth","Header","Landing","state","allValid","formControls","Email","value","isValid","isTouched","type","label","password","onChangeHandler","e","control","target","email","length","setState","names","Object","keys","count","i","registerButtonClickHandler","authData","returnSecureToken","post","response","console","log","enterButtonClickHandler","props","Component","mapDispatchToProps","dispatch","isLogin","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react'\nimport classes from './Landing.css'\nimport Button from '../../components/UI/Button/Button'\nimport Input from \"../../components/UI/Input/Input\";\nimport is from 'is_js'\nimport axios from 'axios'\nimport {connect} from \"react-redux\";\nimport {auth} from \"../../store/actions/auth\";\nimport Header from '../../components/Header/Header'\n\n\nclass Landing extends React.Component{\n    state = {\n        allValid: false,\n        formControls:{\n            Email:{\n                value: '',\n                isValid: true,\n                isTouched: false,\n                type: 'text',\n                label:'Email'\n            },\n            password:{\n                value: '',\n                isValid:true,\n                isTouched:false,\n                type: 'password',\n                label:'password'\n            }\n        }\n\n    };\n    onChangeHandler = (e, control)=>{\n        control.isTouched = true;\n        control.value = e.target.value;\n        const formControls = this.state.formControls;\n        if (control.label === 'Email'){\n            if (is.email(control.value)){\n                control.isValid = true\n            }\n            else {\n                control.isValid = false\n            }\n\n        }\n        if (control.label === 'password'){\n            if(control.value.length >=6){\n                control.isValid = true\n            }\n            else {\n                control.isValid = false\n            }\n        }\n        formControls[control.label] = control;\n\n\n        this.setState({\n            formControls\n        });\n        const names = Object.keys(this.state.formControls);\n\n\n\n        let count = 0;\n        for (let i=0; i<names.length;i++){\n            if (formControls[names[i]].isValid && formControls[names[i]].isTouched){\n                count ++;\n\n            }\n        }\n        if (count === names.length){\n            this.setState({\n                allValid: true\n\n            })\n\n        }\n\n    };\n     registerButtonClickHandler = async ()=>{\n         const authData = {\n             email: this.state.formControls.Email.value,\n             password: this.state.formControls.password.value,\n             returnSecureToken: true\n         };\n         try{\n             const response = await axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyDJHO8YGwRavnNLmCryDKXOic-ChroRlFo', authData);\n             console.log(this.state.formControls.Email)\n\n             // await axios.post(`https://taskscheduler-be7db.firebaseio.com/users/<${response.data.idToken}>.json`, this.state );\n\n         }catch (e) {\n             console.log(e)\n\n         }\n         this.setState({\n             allValid: false,\n             formControls:{\n                 Email:{\n                     value: '',\n                     isValid: true,\n                     isTouched: false,\n                     type: 'text',\n                     label:'Email'\n                 },\n                 password:{\n                     value: '',\n                     isValid:true,\n                     isTouched:false,\n                     type: 'password',\n                     label:'password'\n                 }\n             }\n\n         })\n\n\n\n\n    };\n     enterButtonClickHandler = () =>{\n\n         // const authData = {\n         //     email: this.state.formControls.Email.value,\n         //     password: this.state.formControls.password.value,\n         //     returnSecureToken: true\n         // };\n         // try{\n         //     const response = await axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyDJHO8YGwRavnNLmCryDKXOic-ChroRlFo', authData);\n         //     console.log(response.data)\n         // }catch (e) {\n         //     console.log(e)\n         //\n         // }\n         // this.setState({\n         //     allValid: false,\n         //     formControls:{\n         //         Email:{\n         //             value: '',\n         //             isValid: true,\n         //             isTouched: false,\n         //             type: 'text',\n         //             label:'Email'\n         //         },\n         //         password:{\n         //             value: '',\n         //             isValid:true,\n         //             isTouched:false,\n         //             type: 'password',\n         //             label:'password'\n         //         }\n         //     }\n         //\n         // })\n\n     }\n\n    render(){\n         console.log(this.props.state)\n\n        const email = this.state.formControls.Email;\n        const password = this.state.formControls.password;\n    return(\n        <Fragment>\n            <Header/>\n        <div className={classes.Landing}>\n            <div>\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Doloribus exercitationem itaque laborum qui quis? Architecto aut consectetur consequuntur, dolorum nam pariatur sit tempora? Amet dolorem hic, laudantium repudiandae rerum vel.\n                <div>\n                    <Input isValid={email.isValid} label={email.label} value={email.value} onChange={(e)=>this.onChangeHandler(e, email)}/>\n                    <Input label={password.label} isValid={password.isValid} type={password.type} value={password.value} onChange={(e)=>this.onChangeHandler(e, password)}/>\n                    <Button disabled={!this.state.allValid} onClick={()=>this.registerButtonClickHandler()}>Зарегестрироваться</Button>\n                    <Button type={'green'} disabled={!this.state.allValid} onClick={()=>this.enterButtonClickHandler()}>Войти</Button>\n                </div>\n\n            </div>\n            <div>\n                <i className=\"far fa-calendar-alt\"></i>\n            </div>\n\n        </div>\n\n        </Fragment>\n    )\n\n    }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return{\n        auth:(email, password, isLogin)=> dispatch(auth(email,password, isLogin))\n    }\n    \n}\nfunction mapStateToProps(state) {\n    return{\n        state: state.auth\n    }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Landing);"]},"metadata":{},"sourceType":"module"}