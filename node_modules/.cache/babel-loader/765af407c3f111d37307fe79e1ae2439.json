{"ast":null,"code":"import _classCallCheck from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/egor/Documents/qqq/Tasker/src/components/FormOftasks/MyForm.js\";\nimport React from 'react';\nimport classes from './MyForm.css';\nimport Button from '../UI/Button/Button';\nimport { connect } from 'react-redux';\nimport { addNewTask as _addNewTask } from \"../../store/actions/addNewTask\";\n\nvar MyForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MyForm, _React$Component);\n\n  function MyForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MyForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MyForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      taskName: '',\n      description: '',\n      endDate: ''\n    };\n\n    _this.onChangeInput = function (e, option) {\n      var state = _this.state;\n      state[option] = e.target.value;\n\n      _this.setState({\n        state: state\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MyForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var newState = {\n        taskName: this.state.taskName,\n        description: this.state.description,\n        endDate: this.state.endDate\n      };\n      return React.createElement(\"div\", {\n        className: classes.MyForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"username: \", this.props.name), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Task Name: \"), React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.taskName,\n        onChange: function onChange(e) {\n          return _this2.onChangeInput(e, 'taskName');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"End Date: \"), React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.endDate,\n        onChange: function onChange(e) {\n          return _this2.onChangeInput(e, 'endDate');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Description: \"), React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.description,\n        onChange: function onChange(e) {\n          return _this2.onChangeInput(e, 'description');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: 'green',\n        onClick: function onClick() {\n          return _this2.props.addNewTask(newState);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Add Task\"));\n    }\n  }]);\n\n  return MyForm;\n}(React.Component);\n\n;\n\nfunction mapStateToProps(state) {\n  return {\n    tasks: state\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addNewTask: function addNewTask(task) {\n      return dispatch(_addNewTask(task));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyForm);","map":{"version":3,"sources":["/Users/egor/Documents/qqq/Tasker/src/components/FormOftasks/MyForm.js"],"names":["React","classes","Button","connect","addNewTask","MyForm","state","taskName","description","endDate","onChangeInput","e","option","target","value","setState","newState","props","name","Component","mapStateToProps","tasks","mapDispatchToProps","dispatch","task"],"mappings":"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","sourcesContent":["import React from 'react'\nimport classes from './MyForm.css'\nimport Button from '../UI/Button/Button'\nimport {connect} from 'react-redux'\nimport {addNewTask} from \"../../store/actions/addNewTask\";\n\nclass MyForm extends React.Component {\n    state={\n        taskName: '',\n        description: '',\n        endDate: ''\n    };\n    onChangeInput = (e, option)=>{\n\n        const state = this.state;\n        state[option] = e.target.value;\n        this.setState({\n            state\n        })\n\n    };\n\n    render() {\n        const newState = {\n            taskName: this.state.taskName,\n            description: this.state.description,\n            endDate: this.state.endDate\n        };\n        return (\n            <div className={classes.MyForm}>\n                <h1>\n                    username: {this.props.name}\n                </h1>\n\n                <label>Task Name: </label>\n                <input type=\"text\" value={this.state.taskName} onChange={(e)=>this.onChangeInput(e, 'taskName')} />\n\n                <label>End Date: </label>\n                <input type=\"text\" value={this.state.endDate} onChange={(e)=>this.onChangeInput(e, 'endDate')}/>\n\n                <label>Description: </label>\n                <input type=\"text\" value={this.state.description} onChange={(e)=>this.onChangeInput(e, 'description')} />\n                <Button  type={'green'} onClick={()=>this.props.addNewTask(newState)}>Add Task</Button>\n            </div>\n        )\n    }\n\n\n};\n\nfunction mapStateToProps(state) {\n    return{\n        tasks: state\n    }\n\n}\nfunction mapDispatchToProps(dispatch) {\n    return{\n        addNewTask: (task)=>dispatch(addNewTask(task))\n    }\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(MyForm);"]},"metadata":{},"sourceType":"module"}