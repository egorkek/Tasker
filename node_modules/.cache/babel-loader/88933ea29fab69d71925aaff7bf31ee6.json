{"ast":null,"code":"import _classCallCheck from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/egor/Documents/qqq/Tasker/src/components/FormOftasks/MyForm.js\";\nimport React from 'react';\nimport classes from './MyForm.css';\nimport Button from '../UI/Button/Button';\nimport { connect } from 'react-redux';\n\nvar MyForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MyForm, _React$Component);\n\n  function MyForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MyForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MyForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      taskName: '',\n      description: '',\n      endDate: ''\n    };\n\n    _this.onChangeInput = function (e, option) {\n      var state = _this.state;\n      console.log(state);\n      console.log(state.option);\n\n      _this.setState({\n        state: state\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MyForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        className: classes.MyForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Task Name: \"), React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.taskName,\n        onChange: function onChange(e) {\n          return _this2.onChangeInput(e, 'taskName');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"End Date: \"), React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.endDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Description: \"), React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: 'green',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Add Task\"));\n    }\n  }]);\n\n  return MyForm;\n}(React.Component);\n\n;\n\nfunction mapStateToProps(state) {\n  return {\n    tasks: state\n  };\n}\n\nexport default connect(mapStateToProps)(MyForm);","map":{"version":3,"sources":["/Users/egor/Documents/qqq/Tasker/src/components/FormOftasks/MyForm.js"],"names":["React","classes","Button","connect","MyForm","state","taskName","description","endDate","onChangeInput","e","option","console","log","setState","props","Component","mapStateToProps","tasks"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;IAEMC,M;;;;;;;;;;;;;;;;;UACFC,K,GAAM;AACFC,MAAAA,QAAQ,EAAE,EADR;AAEFC,MAAAA,WAAW,EAAE,EAFX;AAGFC,MAAAA,OAAO,EAAE;AAHP,K;;UAKNC,a,GAAgB,UAACC,CAAD,EAAIC,MAAJ,EAAa;AAEzB,UAAMN,KAAK,GAAG,MAAKA,KAAnB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACM,MAAlB;;AACA,YAAKG,QAAL,CAAc;AACVT,QAAAA,KAAK,EAALA;AADU,OAAd;AAMH,K;;;;;;;6BAEQ;AAAA;;AACLO,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAjB;AACA,aACI;AAAK,QAAA,SAAS,EAAEd,OAAO,CAACG,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHJ,EAII;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,QAArC;AAA+C,QAAA,QAAQ,EAAE,kBAACI,CAAD;AAAA,iBAAK,MAAI,CAACD,aAAL,CAAmBC,CAAnB,EAAsB,UAAtB,CAAL;AAAA,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,EAOI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWG,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBATJ,EAUI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,EAWI,oBAAC,MAAD;AAAS,QAAA,IAAI,EAAE,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXJ,CADJ;AAeH;;;;EApCgBP,KAAK,CAACgB,S;;AAuC1B;;AAED,SAASC,eAAT,CAAyBZ,KAAzB,EAAgC;AAC5B,SAAM;AACFa,IAAAA,KAAK,EAAEb;AADL,GAAN;AAIH;;AACD,eAAeF,OAAO,CAACc,eAAD,CAAP,CAAyBb,MAAzB,CAAf","sourcesContent":["import React from 'react'\nimport classes from './MyForm.css'\nimport Button from '../UI/Button/Button'\nimport {connect} from 'react-redux'\n\nclass MyForm extends React.Component {\n    state={\n        taskName: '',\n        description: '',\n        endDate: ''\n    };\n    onChangeInput = (e, option)=>{\n\n        const state = this.state;\n        console.log(state)\n        console.log(state.option)\n        this.setState({\n            state\n        })\n\n\n\n    };\n\n    render() {\n        console.log(this.props);\n        return (\n            <div className={classes.MyForm}>\n\n\n                <label>Task Name: </label>\n                <input type=\"text\" value={this.state.taskName} onChange={(e)=>this.onChangeInput(e, 'taskName')} />\n\n                <label>End Date: </label>\n                <input type=\"text\" value={this.state.endDate}/>\n\n                <label>Description: </label>\n                <input type=\"text\" value={this.state.description} />\n                <Button  type={'green'}>Add Task</Button>\n            </div>\n        )\n    }\n\n\n};\n\nfunction mapStateToProps(state) {\n    return{\n        tasks: state\n    }\n\n}\nexport default connect(mapStateToProps)(MyForm);"]},"metadata":{},"sourceType":"module"}