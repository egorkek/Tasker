{"ast":null,"code":"import _regeneratorRuntime from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nexport function addTask(taskName, description, endDate) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var response, taskListLength, newTask;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"https://taskscheduler-be7db.firebaseio.com/users/<\".concat(getState().auth.keyForBD, \">/listOfTasks.json\"));\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return axios;\n\n              case 5:\n                taskListLength = _context.sent;\n                if (taskListLength === undefined) taskListLength = 0;\n                newTask = {\n                  taskName: taskName,\n                  description: description,\n                  endDate: endDate\n                };\n                _context.next = 10;\n                return axios.put(\"https://taskscheduler-be7db.firebaseio.com/users/<\".concat(getState().auth.keyForBD, \">/listOfTasks/\").concat(taskListLength, \".json\"), newTask);\n\n              case 10:\n                dispatch(forReducer());\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}\n\nfunction forReducer() {\n  return {\n    type: 'ADD_TASK'\n  };\n}","map":{"version":3,"sources":["/Users/egor/Documents/qqq/Tasker/src/store/actions/addTask.js"],"names":["axios","addTask","taskName","description","endDate","dispatch","getState","get","auth","keyForBD","response","taskListLength","undefined","newTask","put","forReducer","type"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,SAASC,OAAT,CAAiBC,QAAjB,EAA2BC,WAA3B,EAAwCC,OAAxC,EAAiD;AACpD;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACoBN,KAAK,CAACO,GAAN,6DAA+DD,QAAQ,GAAGE,IAAX,CAAgBC,QAA/E,wBADpB;;AAAA;AACGC,gBAAAA,QADH;AAAA;AAAA,uBAEwBV,KAFxB;;AAAA;AAECW,gBAAAA,cAFD;AAGH,oBAAGA,cAAc,KAAKC,SAAtB,EACID,cAAc,GAAG,CAAjB;AAEIE,gBAAAA,OANL,GAMe;AACZX,kBAAAA,QAAQ,EAARA,QADY;AACFC,kBAAAA,WAAW,EAAXA,WADE;AACWC,kBAAAA,OAAO,EAAPA;AADX,iBANf;AAAA;AAAA,uBAUKJ,KAAK,CAACc,GAAN,6DAA+DR,QAAQ,GAAGE,IAAX,CAAgBC,QAA/E,2BAAwGE,cAAxG,YAA+HE,OAA/H,CAVL;;AAAA;AAWHR,gBAAAA,QAAQ,CAACU,UAAU,EAAX,CAAR;;AAXG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAeH;;AACD,SAASA,UAAT,GAAsB;AAClB,SAAM;AACFC,IAAAA,IAAI,EAAC;AADH,GAAN;AAMH","sourcesContent":["import axios from 'axios'\nexport function addTask(taskName, description, endDate) {\n    return async (dispatch, getState)=>{\n        const response = await axios.get(`https://taskscheduler-be7db.firebaseio.com/users/<${getState().auth.keyForBD}>/listOfTasks.json`)\n        let taskListLength = await axios\n        if(taskListLength === undefined)\n            taskListLength = 0;\n\n          const newTask = {\n              taskName, description, endDate\n          };\n\n          await axios.put(`https://taskscheduler-be7db.firebaseio.com/users/<${getState().auth.keyForBD}>/listOfTasks/${taskListLength}.json`, newTask)\n        dispatch(forReducer())\n\n    }\n\n}\nfunction forReducer() {\n    return{\n        type:'ADD_TASK',\n\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}