{"ast":null,"code":"import _regeneratorRuntime from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nexport function getTasks() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(getState());\n                dispatch(fetchTasksStart());\n                _context.prev = 2;\n                _context.next = 5;\n                return axios.get(\"https://taskscheduler-be7db.firebaseio.com/users/<\".concat(getState().auth.keyForBD, \">/listOfTasks.json\"));\n\n              case 5:\n                response = _context.sent;\n                dispatch(fetchTasksSuccess(response.data));\n                _context.next = 13;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n                dispatch(fetcTasksError(_context.t0));\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 9]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}\n\nfunction fetchTasksSuccess(tasks) {\n  return {\n    type: 'FETCH_TASKS_SUCCESS',\n    tasks: tasks\n  };\n}\n\nfunction fetchTasksStart() {\n  return {\n    type: 'FETCH_TASKS_START'\n  };\n}\n\nexport function fetcTasksError(e) {\n  return {\n    type: 'FETCH_TASKS_ERROR',\n    error: e\n  };\n}\n;","map":{"version":3,"sources":["/Users/egor/Documents/qqq/Tasker/src/store/actions/getTasks.js"],"names":["axios","getTasks","dispatch","getState","console","log","fetchTasksStart","get","auth","keyForBD","response","fetchTasksSuccess","data","fetcTasksError","tasks","type","e","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,QAAT,GAAoB;AACvB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACHC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,EAApB;AAEAD,gBAAAA,QAAQ,CAACI,eAAe,EAAhB,CAAR;AAHG;AAAA;AAAA,uBAMwBN,KAAK,CAACO,GAAN,6DAA+DJ,QAAQ,GAAGK,IAAX,CAAgBC,QAA/E,wBANxB;;AAAA;AAMOC,gBAAAA,QANP;AAQCR,gBAAAA,QAAQ,CAACS,iBAAiB,CAACD,QAAQ,CAACE,IAAV,CAAlB,CAAR;AARD;AAAA;;AAAA;AAAA;AAAA;AAaCR,gBAAAA,OAAO,CAACC,GAAR;AACAH,gBAAAA,QAAQ,CAACW,cAAc,aAAf,CAAR;;AAdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBH;;AACD,SAASF,iBAAT,CAA2BG,KAA3B,EAAkC;AAC9B,SAAM;AACFC,IAAAA,IAAI,EAAE,qBADJ;AAEFD,IAAAA,KAAK,EAALA;AAFE,GAAN;AAKH;;AAED,SAASR,eAAT,GAA0B;AACtB,SAAM;AACFS,IAAAA,IAAI,EAAC;AADH,GAAN;AAGH;;AAED,OAAO,SAASF,cAAT,CAAwBG,CAAxB,EAA2B;AAC9B,SAAM;AACFD,IAAAA,IAAI,EAAE,mBADJ;AAEFE,IAAAA,KAAK,EAAED;AAFL,GAAN;AAMH;AAAA","sourcesContent":["import axios from 'axios'\n\nexport function getTasks() {\n    return async (dispatch, getState)=>{\n        console.log(getState())\n\n        dispatch(fetchTasksStart());\n\n        try {\n            const response = await axios.get(`https://taskscheduler-be7db.firebaseio.com/users/<${getState().auth.keyForBD}>/listOfTasks.json`)\n\n            dispatch(fetchTasksSuccess(response.data));\n\n\n        }\n        catch (e) {\n            console.log(e)\n            dispatch(fetcTasksError(e))\n\n\n        }\n\n\n\n    }\n\n}\nfunction fetchTasksSuccess(tasks) {\n    return{\n        type: 'FETCH_TASKS_SUCCESS',\n        tasks\n    }\n\n}\n\nfunction fetchTasksStart(){\n    return{\n        type:'FETCH_TASKS_START'\n    }\n}\n\nexport function fetcTasksError(e) {\n    return{\n        type: 'FETCH_TASKS_ERROR',\n        error: e\n    }\n\n\n};"]},"metadata":{},"sourceType":"module"}