{"ast":null,"code":"import _classCallCheck from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/egor/Documents/qqq/Tasker/src/containers/Tasker/Tasker.js\";\nimport React, { Fragment } from 'react';\nimport classes from './Tasker.css';\nimport MyForm from \"../../components/FormOftasks/MyForm\";\nimport ListOfTasks from '../../components/ListOfTasks/ListOfTasks';\nimport Header from \"../../components/Header/Header\";\n\nvar Tasker =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tasker, _React$Component);\n\n  function Tasker() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Tasker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Tasker)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: '',\n      tasks: [{\n        nameOfTask: 'Сделать Дз',\n        description: 'kek',\n        endDate: '22 january'\n      }, {\n        nameOfTask: 'Приготовить ужин',\n        description: 'kek',\n        endDate: '22 january'\n      }, {\n        nameOfTask: 'Заказать линзы',\n        description: 'kek',\n        endDate: '22 january'\n      }]\n    };\n\n    _this.onChangeNameHandler = function (e) {\n      _this.setState({\n        name: e.target.value\n      });\n    };\n\n    _this.addTaskHandler = function () {\n      var nameTask = document.querySelector('#nameTask').value;\n      var description = document.querySelector('#description').value;\n      var endDate = document.querySelector('#endDate').value;\n\n      if (nameTask && description && endDate) {\n        var tasks = _this.state.tasks;\n        tasks.push({\n          nameOfTask: nameTask,\n          description: description,\n          endDate: endDate\n        });\n\n        _this.setState({\n          tasks: tasks\n        });\n      }\n    };\n\n    _this.deleteTaskButtonHandler = function (index) {\n      var tasks = _this.state.tasks;\n      index === 0 ? tasks.shift() : tasks.splice(index, index);\n\n      _this.setState({\n        tasks: tasks\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Tasker, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.Tasker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(MyForm, {\n        changeNameFunc: this.onChangeNameHandler,\n        name: this.state.name,\n        AddTask: this.addTaskHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(ListOfTasks, {\n        name: this.state.name,\n        tasks: this.state.tasks,\n        deleteTask: this.deleteTaskButtonHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Tasker;\n}(React.Component);\n\n;\nexport default Tasker;","map":{"version":3,"sources":["/Users/egor/Documents/qqq/Tasker/src/containers/Tasker/Tasker.js"],"names":["React","Fragment","classes","MyForm","ListOfTasks","Header","Tasker","state","name","tasks","nameOfTask","description","endDate","onChangeNameHandler","e","setState","target","value","addTaskHandler","nameTask","document","querySelector","push","deleteTaskButtonHandler","index","shift","splice","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;IAEMC,M;;;;;;;;;;;;;;;;;UACFC,K,GAAM;AACFC,MAAAA,IAAI,EAAE,EADJ;AAEFC,MAAAA,KAAK,EAAC,CACF;AAACC,QAAAA,UAAU,EAAE,YAAb;AAA2BC,QAAAA,WAAW,EAAE,KAAxC;AAA+CC,QAAAA,OAAO,EAAC;AAAvD,OADE,EAEF;AAACF,QAAAA,UAAU,EAAE,kBAAb;AAAiCC,QAAAA,WAAW,EAAE,KAA9C;AAAqDC,QAAAA,OAAO,EAAC;AAA7D,OAFE,EAGF;AAACF,QAAAA,UAAU,EAAE,gBAAb;AAA+BC,QAAAA,WAAW,EAAE,KAA5C;AAAmDC,QAAAA,OAAO,EAAC;AAA3D,OAHE;AAFJ,K;;UASNC,mB,GAAsB,UAACC,CAAD,EAAK;AACzB,YAAKC,QAAL,CAAc;AACVP,QAAAA,IAAI,EAAEM,CAAC,CAACE,MAAF,CAASC;AADL,OAAd;AAGD,K;;UAEDC,c,GAAgB,YAAI;AAChB,UAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,WAAvB,EAAoCJ,KAArD;AACA,UAAMN,WAAW,GAAGS,QAAQ,CAACC,aAAT,CAAuB,cAAvB,EAAuCJ,KAA3D;AACA,UAAML,OAAO,GAAGQ,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCJ,KAAnD;;AACA,UAAIE,QAAQ,IAAIR,WAAZ,IAA2BC,OAA/B,EAAwC;AACpC,YAAIH,KAAK,GAAG,MAAKF,KAAL,CAAWE,KAAvB;AACAA,QAAAA,KAAK,CAACa,IAAN,CAAW;AAACZ,UAAAA,UAAU,EAAES,QAAb;AAAuBR,UAAAA,WAAW,EAAEA,WAApC;AAAiDC,UAAAA,OAAO,EAAEA;AAA1D,SAAX;;AACA,cAAKG,QAAL,CAAc;AACVN,UAAAA,KAAK,EAALA;AADU,SAAd;AAGH;AAEJ,K;;UACDc,uB,GAA0B,UAACC,KAAD,EAAS;AAC/B,UAAMf,KAAK,GAAE,MAAKF,KAAL,CAAWE,KAAxB;AACAe,MAAAA,KAAK,KAAI,CAAT,GAAaf,KAAK,CAACgB,KAAN,EAAb,GAA6BhB,KAAK,CAACiB,MAAN,CAAaF,KAAb,EAAmBA,KAAnB,CAA7B;;AACA,YAAKT,QAAL,CAAc;AACVN,QAAAA,KAAK,EAALA;AADU,OAAd;AAMH,K;;;;;;;6BAEO;AACJ,aACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAGI;AAAK,QAAA,SAAS,EAAEP,OAAO,CAACI,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGA,oBAAC,MAAD;AACA,QAAA,cAAc,EAAE,KAAKO,mBADrB;AAEA,QAAA,IAAI,EAAE,KAAKN,KAAL,CAAWC,IAFjB;AAGA,QAAA,OAAO,EAAE,KAAKU,cAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHA,EASH,oBAAC,WAAD;AACI,QAAA,IAAI,EAAE,KAAKX,KAAL,CAAWC,IADrB;AAEI,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KAFtB;AAGI,QAAA,UAAU,EAAE,KAAKc,uBAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATG,CAHJ,CADJ;AAwBH;;;;EAjEgBvB,KAAK,CAAC2B,S;;AAoE1B;AAED,eAAerB,MAAf","sourcesContent":["import React, {Fragment} from 'react'\nimport classes from './Tasker.css'\nimport MyForm from \"../../components/FormOftasks/MyForm\";\nimport ListOfTasks from '../../components/ListOfTasks/ListOfTasks'\nimport Header from \"../../components/Header/Header\";\n\nclass Tasker extends React.Component{\n    state={\n        name: '',\n        tasks:[\n            {nameOfTask: 'Сделать Дз', description: 'kek', endDate:'22 january'},\n            {nameOfTask: 'Приготовить ужин', description: 'kek', endDate:'22 january'},\n            {nameOfTask: 'Заказать линзы', description: 'kek', endDate:'22 january'}\n            ]\n    };\n\n    onChangeNameHandler = (e)=>{\n      this.setState({\n          name: e.target.value\n      })\n    };\n\n    addTaskHandler= ()=>{\n        const nameTask = document.querySelector('#nameTask').value;\n        const description = document.querySelector('#description').value;\n        const endDate = document.querySelector('#endDate').value;\n        if (nameTask && description && endDate) {\n            let tasks = this.state.tasks;\n            tasks.push({nameOfTask: nameTask, description: description, endDate: endDate});\n            this.setState({\n                tasks\n            })\n        }\n\n    };\n    deleteTaskButtonHandler = (index)=>{\n        const tasks= this.state.tasks;\n        index ===0 ? tasks.shift() : tasks.splice(index,index);\n        this.setState({\n            tasks\n        })\n\n\n\n    };\n\n    render(){\n        return(\n            <Fragment>\n                <Header/>\n\n                <div className={classes.Tasker}>\n\n\n                <MyForm\n                changeNameFunc={this.onChangeNameHandler}\n                name={this.state.name}\n                AddTask={this.addTaskHandler}\n\n                />\n             <ListOfTasks\n                 name={this.state.name}\n                 tasks={this.state.tasks}\n                 deleteTask={this.deleteTaskButtonHandler}\n\n\n             />\n            </div>\n            </Fragment>\n        )\n\n    }\n\n\n};\n\nexport default Tasker"]},"metadata":{},"sourceType":"module"}