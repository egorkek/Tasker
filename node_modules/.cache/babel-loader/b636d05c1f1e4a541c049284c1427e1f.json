{"ast":null,"code":"import _classCallCheck from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/egor/Documents/qqq/Tasker/src/containers/Tasker/Tasker.js\";\nimport React, { Fragment } from 'react';\nimport classes from './Tasker.css';\nimport MyForm from \"../../components/FormOftasks/MyForm\";\nimport ListOfTasks from '../../components/ListOfTasks/ListOfTasks';\nimport Header from \"../../components/Header/Header\";\nimport { connect } from 'react-redux';\n\nvar Tasker =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tasker, _React$Component);\n\n  function Tasker() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Tasker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Tasker)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      newTaskName: '',\n      newTaskDescription: '',\n      newTaskEndDate: ''\n    };\n\n    _this.onChangeNameHandler = function (e) {\n      _this.setState({\n        name: e.target.value\n      });\n    };\n\n    _this.addTaskHandler = function () {\n      var nameTask = document.querySelector('#nameTask').value;\n      var description = document.querySelector('#description').value;\n      var endDate = document.querySelector('#endDate').value;\n\n      if (nameTask && description && endDate) {\n        var tasks = _this.state.tasks;\n        tasks.push({\n          nameOfTask: nameTask,\n          description: description,\n          endDate: endDate\n        });\n\n        _this.setState({\n          tasks: tasks\n        });\n      }\n    };\n\n    _this.deleteTaskButtonHandler = function (index) {\n      var tasks = _this.state.tasks;\n      index === 0 ? tasks.shift() : tasks.splice(index, index);\n\n      _this.setState({\n        tasks: tasks\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Tasker, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.state);\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.Tasker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(MyForm, {\n        changeNameFunc: this.onChangeNameHandler,\n        name: this.state.name,\n        AddTask: this.addTaskHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(ListOfTasks, {\n        tasks: this.state.tasks,\n        deleteTask: this.deleteTaskButtonHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Tasker;\n}(React.Component);\n\n;\n\nfunction mapStateToProps(state) {\n  return {\n    state: state.tasks\n  };\n}\n\nexport default connect(mapStateToProps)(Tasker);","map":{"version":3,"sources":["/Users/egor/Documents/qqq/Tasker/src/containers/Tasker/Tasker.js"],"names":["React","Fragment","classes","MyForm","ListOfTasks","Header","connect","Tasker","state","newTaskName","newTaskDescription","newTaskEndDate","onChangeNameHandler","e","setState","name","target","value","addTaskHandler","nameTask","document","querySelector","description","endDate","tasks","push","nameOfTask","deleteTaskButtonHandler","index","shift","splice","console","log","props","Component","mapStateToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;IAEMC,M;;;;;;;;;;;;;;;;;UACFC,K,GAAM;AACFC,MAAAA,WAAW,EAAE,EADX;AAEFC,MAAAA,kBAAkB,EAAE,EAFlB;AAGFC,MAAAA,cAAc,EAAE;AAHd,K;;UAMNC,mB,GAAsB,UAACC,CAAD,EAAK;AACzB,YAAKC,QAAL,CAAc;AACVC,QAAAA,IAAI,EAAEF,CAAC,CAACG,MAAF,CAASC;AADL,OAAd;AAGD,K;;UAEDC,c,GAAgB,YAAI;AAChB,UAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,WAAvB,EAAoCJ,KAArD;AACA,UAAMK,WAAW,GAAGF,QAAQ,CAACC,aAAT,CAAuB,cAAvB,EAAuCJ,KAA3D;AACA,UAAMM,OAAO,GAAGH,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCJ,KAAnD;;AACA,UAAIE,QAAQ,IAAIG,WAAZ,IAA2BC,OAA/B,EAAwC;AACpC,YAAIC,KAAK,GAAG,MAAKhB,KAAL,CAAWgB,KAAvB;AACAA,QAAAA,KAAK,CAACC,IAAN,CAAW;AAACC,UAAAA,UAAU,EAAEP,QAAb;AAAuBG,UAAAA,WAAW,EAAEA,WAApC;AAAiDC,UAAAA,OAAO,EAAEA;AAA1D,SAAX;;AACA,cAAKT,QAAL,CAAc;AACVU,UAAAA,KAAK,EAALA;AADU,SAAd;AAGH;AAEJ,K;;UACDG,uB,GAA0B,UAACC,KAAD,EAAS;AAC/B,UAAMJ,KAAK,GAAE,MAAKhB,KAAL,CAAWgB,KAAxB;AACAI,MAAAA,KAAK,KAAI,CAAT,GAAaJ,KAAK,CAACK,KAAN,EAAb,GAA6BL,KAAK,CAACM,MAAN,CAAaF,KAAb,EAAmBA,KAAnB,CAA7B;;AACA,YAAKd,QAAL,CAAc;AACVU,QAAAA,KAAK,EAALA;AADU,OAAd;AAMH,K;;;;;;;6BAEO;AACJO,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWzB,KAAvB;AACA,aACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAGI;AAAK,QAAA,SAAS,EAAEN,OAAO,CAACK,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGA,oBAAC,MAAD;AACA,QAAA,cAAc,EAAE,KAAKK,mBADrB;AAEA,QAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWO,IAFjB;AAGA,QAAA,OAAO,EAAE,KAAKG,cAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHA,EASH,oBAAC,WAAD;AACI,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWgB,KADtB;AAEI,QAAA,UAAU,EAAE,KAAKG,uBAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATG,CAHJ,CADJ;AAuBH;;;;EA9DgB3B,KAAK,CAACkC,S;;AAiE1B;;AAED,SAASC,eAAT,CAA0B3B,KAA1B,EAAgC;AAC5B,SAAM;AACFA,IAAAA,KAAK,EAAEA,KAAK,CAACgB;AADX,GAAN;AAIH;;AAED,eAAelB,OAAO,CAAC6B,eAAD,CAAP,CAAyB5B,MAAzB,CAAf","sourcesContent":["import React, {Fragment} from 'react'\nimport classes from './Tasker.css'\nimport MyForm from \"../../components/FormOftasks/MyForm\";\nimport ListOfTasks from '../../components/ListOfTasks/ListOfTasks'\nimport Header from \"../../components/Header/Header\";\nimport {connect} from 'react-redux'\n\nclass Tasker extends React.Component{\n    state={\n        newTaskName: '',\n        newTaskDescription: '',\n        newTaskEndDate: ''\n    };\n\n    onChangeNameHandler = (e)=>{\n      this.setState({\n          name: e.target.value\n      })\n    };\n\n    addTaskHandler= ()=>{\n        const nameTask = document.querySelector('#nameTask').value;\n        const description = document.querySelector('#description').value;\n        const endDate = document.querySelector('#endDate').value;\n        if (nameTask && description && endDate) {\n            let tasks = this.state.tasks;\n            tasks.push({nameOfTask: nameTask, description: description, endDate: endDate});\n            this.setState({\n                tasks\n            })\n        }\n\n    };\n    deleteTaskButtonHandler = (index)=>{\n        const tasks= this.state.tasks;\n        index ===0 ? tasks.shift() : tasks.splice(index,index);\n        this.setState({\n            tasks\n        })\n\n\n\n    };\n\n    render(){\n        console.log(this.props.state)\n        return(\n            <Fragment>\n                <Header/>\n\n                <div className={classes.Tasker}>\n\n\n                <MyForm\n                changeNameFunc={this.onChangeNameHandler}\n                name={this.state.name}\n                AddTask={this.addTaskHandler}\n\n                />\n             <ListOfTasks\n                 tasks={this.state.tasks}\n                 deleteTask={this.deleteTaskButtonHandler}\n\n\n             />\n            </div>\n            </Fragment>\n        )\n\n    }\n\n\n};\n\nfunction mapStateToProps (state){\n    return{\n        state: state.tasks\n    }\n\n}\n\nexport default connect(mapStateToProps)(Tasker)"]},"metadata":{},"sourceType":"module"}