{"ast":null,"code":"import _regeneratorRuntime from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/egor/Documents/qqq/Tasker/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { getTasks } from './getTasks';\nexport function auth(email, password, isLogin) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var authData, dbName, dataForBD, response, idToken;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                authData = {\n                  email: email,\n                  password: password,\n                  returnSecureToken: true\n                };\n                dbName = authData.email.replace('@', '').replace('.', '');\n\n                if (isLogin) {\n                  _context.next = 8;\n                  break;\n                }\n\n                console.log(authData);\n                dataForBD = {\n                  email: email,\n                  listOfTasks: {}\n                };\n                _context.next = 7;\n                return axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyDJHO8YGwRavnNLmCryDKXOic-ChroRlFo', authData);\n\n              case 7:\n                axios.put(\"https://taskscheduler-be7db.firebaseio.com/users/\".concat(dbName, \".json\"), dataForBD);\n\n              case 8:\n                if (!isLogin) {\n                  _context.next = 16;\n                  break;\n                }\n\n                _context.next = 11;\n                return axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyDJHO8YGwRavnNLmCryDKXOic-ChroRlFo', authData);\n\n              case 11:\n                response = _context.sent;\n                idToken = response.data.idToken;\n                console.log(response.data); // const info = await axios.get(`https://taskscheduler-be7db.firebaseio.com/users/<${response.data.email.replace('@', '').replace('.', '')}>.json`);\n\n                dispatch(login(authData.email, idToken, dbName));\n                dispatch(getTasks());\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}\n\nfunction login(info, idToken, keyForBD) {\n  return {\n    type: 'LOG_IN',\n    email: info,\n    idToken: idToken,\n    keyForBD: keyForBD\n  };\n}","map":{"version":3,"sources":["/Users/egor/Documents/qqq/Tasker/src/store/actions/auth.js"],"names":["axios","getTasks","auth","email","password","isLogin","dispatch","getState","authData","returnSecureToken","dbName","replace","console","log","dataForBD","listOfTasks","post","put","response","idToken","data","login","info","keyForBD","type"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,YAAvB;AAEA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqBC,QAArB,EAA+BC,OAA/B,EAAwC;AAC3C;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACGC,gBAAAA,QADH,GACc;AACbL,kBAAAA,KAAK,EAALA,KADa;AACPC,kBAAAA,QAAQ,EAARA,QADO;AACGK,kBAAAA,iBAAiB,EAAE;AADtB,iBADd;AAIGC,gBAAAA,MAJH,GAIYF,QAAQ,CAACL,KAAT,CAAeQ,OAAf,CAAuB,GAAvB,EAA4B,EAA5B,EAAgCA,OAAhC,CAAwC,GAAxC,EAA6C,EAA7C,CAJZ;;AAAA,oBAKEN,OALF;AAAA;AAAA;AAAA;;AAMCO,gBAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACMM,gBAAAA,SAPP,GAOmB;AACdX,kBAAAA,KAAK,EAALA,KADc;AAEdY,kBAAAA,WAAW,EAAC;AAFE,iBAPnB;AAAA;AAAA,uBAgBOf,KAAK,CAACgB,IAAN,CAAW,sHAAX,EAAmIR,QAAnI,CAhBP;;AAAA;AAiBCR,gBAAAA,KAAK,CAACiB,GAAN,4DAA8DP,MAA9D,YAA6EI,SAA7E;;AAjBD;AAAA,qBAoBAT,OApBA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAqBoBL,KAAK,CAACgB,IAAN,CAAW,uHAAX,EAAoIR,QAApI,CArBpB;;AAAA;AAqBGU,gBAAAA,QArBH;AAsBGC,gBAAAA,OAtBH,GAsBaD,QAAQ,CAACE,IAAT,CAAcD,OAtB3B;AAuBHP,gBAAAA,OAAO,CAACC,GAAR,CAAYK,QAAQ,CAACE,IAArB,EAvBG,CAyBH;;AACAd,gBAAAA,QAAQ,CAACe,KAAK,CAACb,QAAQ,CAACL,KAAV,EAAiBgB,OAAjB,EAA0BT,MAA1B,CAAN,CAAR;AACIJ,gBAAAA,QAAQ,CAACL,QAAQ,EAAT,CAAR;;AA3BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAoCH;;AACD,SAASoB,KAAT,CAAeC,IAAf,EAAqBH,OAArB,EAA8BI,QAA9B,EAAwC;AACpC,SAAM;AACFC,IAAAA,IAAI,EAAE,QADJ;AAEFrB,IAAAA,KAAK,EAAEmB,IAFL;AAGFH,IAAAA,OAAO,EAAPA,OAHE;AAIFI,IAAAA,QAAQ,EAARA;AAJE,GAAN;AAOH","sourcesContent":["import axios from 'axios'\nimport {getTasks} from './getTasks'\n\nexport function auth(email, password, isLogin) {\n    return async (dispatch, getState) =>{\n        const authData = {\n            email,password, returnSecureToken: true\n        };\n        const dbName = authData.email.replace('@', '').replace('.', '');\n        if (!isLogin) {\n            console.log(authData);\n            const dataForBD = {\n                email,\n                listOfTasks:{\n\n                }\n\n\n            };\n\n            await axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyDJHO8YGwRavnNLmCryDKXOic-ChroRlFo', authData);\n            axios.put(`https://taskscheduler-be7db.firebaseio.com/users/${dbName}.json`, dataForBD );\n\n        }\n        if(isLogin){\n        const response = await axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyDJHO8YGwRavnNLmCryDKXOic-ChroRlFo', authData);\n        const idToken = response.data.idToken;\n        console.log(response.data)\n\n        // const info = await axios.get(`https://taskscheduler-be7db.firebaseio.com/users/<${response.data.email.replace('@', '').replace('.', '')}>.json`);\n        dispatch(login(authData.email, idToken, dbName));\n            dispatch(getTasks())\n\n\n\n\n        }\n\n    }\n\n}\nfunction login(info, idToken, keyForBD) {\n    return{\n        type: 'LOG_IN',\n        email: info,\n        idToken,\n        keyForBD\n    }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}